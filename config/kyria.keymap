/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hl: hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
        tm: thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// Hold keys: (mods are symetrical)
// |     |     | A-G | C-G | C-A |SCA-G|                          |     |     |     |     |     |     |
// |     |  `  |  G  |  A  |  C  | CAG |                          |     |     |     |     |  '  |     |
// |     |  ~  | S-G | S-A | S-C | SCA |     |     |~~|     |     |     |     |     |     |  "  |     |
//                   |     | L4  | Shf | L2  |     |~~|     | Shf | L3  | L5  |     |     
// ---------------------------------------------------------------------------------------------------------------------------------
// |     |  Q  |  W  |  E  |  R  |  T  |                          |  Y  |  U  |  I  |  O  |  P  |     |
// |     |  A  |  S  |  D  |  F  |  G  |                          |  H  |  J  |  K  |  L  |  ;  |     |
// |     |  Z  |  X  |  C  |  V  |  B  |     |     |~~| L3  |     |  N  |  M  |  ,  |  .  |  /  |     |
//                   |     | Esc | SPC | TAB |     |~~|     | RET | BKS | DEL |     |
            bindings = <
    &none &kp Q      &hm LA(LGUI) W &hm LC(LGUI) E &hm LA(LCTRL) R &hm LS(LC(LA(LGUI))) T                                         &hm RS(RC(RA(RGUI))) Y &hm RA(RCTRL) U &hm RC(RGUI) I     &hm RA(RGUI) O   &kp P        &none
    &none &hl GRAV A &hm    LGUI  S &hm    LALT  D &hm    LCTRL  F &hm LC(LA(LGUI)) G                                             &hm RC(RA(RGUI)) H     &hm    RCTRL  J &hm    RALT  K     &hm    RGUI  L   &hl SQT SEMI &none
    &none &hl TILD Z &hm LS(LGUI) X &hm LS(LALT) C &hm LS(LCTRL) V &hm LS(LC(LALT)) B     &none     &none     &to 1 &none         &hm RS(RC(RALT)) N     &hm RS(RCTRL) M &hm RS(RALT) COMMA &hm RS(RGUI) DOT &kp FSLH     &none
                                    &none          &lt 4 ESC       &tm LSHFT SPACE        &lt 2 TAB &none     &none &tm RSHFT RET &lt 3 BKSP             &lt 5 DEL       &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LEFT RIGHT>;
        };

        layer_1 {
// ---------------------------------------------------------------------------------------------------------------------------------
// Hold keys: (mods are symetrical)
// |     |     | A-G | C-G | C-A |SCA-G|                          |     |     |     |     |     |     |
// |     |  `  |  G  |  A  |  C  | CAG |                          |     |     |     |     |  '  |     |
// |     |  ~  | S-G | S-A | S-C | SCA |     |     |~~|     |     |     |     |     |     |  "  |     |
//                   |     | L4  | Shf | L2  |     |~~|     | Shf | L3  | L5  |     |     
// ---------------------------------------------------------------------------------------------------------------------------------
// Tap keys:
// |     |  Q  |  W  |  F  |  P  |  B  |                          |  J  |  L  |  U  |  Y  |  ;  |     |
// |     |  A  |  R  |  S  |  T  |  G  |                          |  M  |  N  |  E  |  I  |  O  |     |
// |     |  Z  |  X  |  C  |  D  |  V  |     |     |~~|     | L0  |  K  |  H  |  ,  |  .  |  /  |     |
//                   |     | Esc | SPC | TAB |     |~~|     | RET | BKS | DEL |     |
            bindings = <
    &none &kp Q      &hm LA(LGUI) W &hm LC(LGUI) F &hm LA(LCTRL) P &hm LS(LC(LA(LGUI))) B                                         &hm RS(RC(RA(RGUI))) J &hm RA(RCTRL) L &hm RC(RGUI) U     &hm RA(RGUI) Y   &kp SEMI     &none
    &none &hl GRAV A &hm    LGUI  R &hm    LALT  S &hm    LCTRL  T &hm LC(LA(LGUI)) G                                             &hm RC(RA(RGUI)) M     &hm    RCTRL  N &hm    RALT  E     &hm    RGUI  I   &hl SQT O    &none
    &none &hl TILD Z &hm LS(LGUI) X &hm LS(LALT) C &hm LS(LCTRL) D &hm LS(LC(LALT)) V     &none     &none     &none &to 0         &hm RS(RC(RALT)) K     &hm RS(RCTRL) H &hm RS(RALT) COMMA &hm RS(RGUI) DOT &hl DQT FSLH &none
                                    &none          &lt 4 ESC       &tm LSHFT SPACE        &lt 2 TAB &none     &none &tm RSHFT RET &lt 3 BKSP             &lt 5 DEL       &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LEFT RIGHT>;
        };

        layer_2 {
// Hold keys are the same as above, munus the outer column
// ---------------------------------------------------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5  |                           |  6  |  7  |  8  |  9  |  0   |     |
// |     |  !  |  @  |  #  |  $  |  %  |                           |  ^  |  &  |  *  |  (  |  )   |     |
// |     |  \  |  |  |  =  |  +  |  -  |     |     |~~|     |      |  _  |  {  |  }  |  [  |  ]   |     |
//                   |     |     |     |     |     |~~|     |      |     |     |     |
            bindings = <
    &none &kp N1   &hm LA(LGUI) N2   &hm LC(LGUI) N3   &hm LA(LCTRL) N4   &hm LS(LC(LA(LGUI))) N5                                &hm RS(RC(RA(RGUI))) N6 &hm RA(RCTRL) N7   &hm LC(RGUI) N8   &hm RA(RGUI) N9   &kp N0   &none
    &none &kp EXCL &hm    LGUI  AT   &hm    LALT  HASH &hm    LCTRL  DLLR &hm LC(LA(LGUI)) PRCT                                  &hm RC(RA(RGUI)) CRRT   &hm    RCTRL  AMPS &hm    RALT  STAR &hm    RGUI  LPAR &kp RPAR &none
    &none &kp BSLH &hm LS(LGUI) PIPE &hm LS(LALT) EQL  &hm LS(LCTRL) PLUS &hm LS(LC(LALT)) MINUS  &trans &trans    &trans &trans &hm RS(RC(RALT)) UNDER  &hm RS(RCTRL) LBRC &hm LS(RALT) RBRC &hm RS(RGUI) LBKT &kp RBKT &none
                                     &trans            &trans             &trans                  &trans &trans    &trans &trans &trans                  &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_PREV C_NEXT &inc_dec_kp PG_UP PG_DN>;
        };

        layer_3 {
// ---------------------------------------------------------------------------------------------------------------------------------
// |     |     |     |     |     |     |                          | F6  | F7  | F8  | F9  | F10 |BTUSB|
// |     |     |     |     |     |     |                          |LEFT |DOWN | UP  |RIGHT| F11 |     |
// |     |     |     |     |     |     |     |     |  |     |     |HOME |P-DW |P-UP | END | F12 |     |
//                   |     |     |     |     |     |  |     |     |     |     |     |
            bindings = <
    &trans &trans &trans &trans &trans &trans                                &kp F6   &kp F7    &kp F8    &kp F9    &kp F10  &out OUT_TOG
    &trans &trans &trans &trans &trans &trans                                &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp F11  &trans
    &trans &trans &trans &trans &trans &trans &trans &trans    &trans &trans &kp HOME &kp PGDN  &kp PGUP  &kp END   &kp F12  &trans
                         &trans &trans &trans &trans &trans    &trans &trans &trans   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(LS(TAB)) LC(TAB) &inc_dec_kp PG_UP PG_DN>;
        };

        layer_4 {
// ---------------------------------------------------------------------------------------------------------------------------------
// |     | F1  | F2  | F3  | F4  | F5  |                          |     |     |     |     |     |     |
// |     | FWD |NEXT |PLAY |VOL-U|MUTE |                          |     |     |     |     |     |     |
// |     | BWD |PREV |PAUSE|VOL-D|     |     |     |~~|     |     |     |     |     |     |     |     |
//                   |     |     |     |     |     |~~|     |     |     |     |     |
            bindings = <    
    &trans &kp F1   &kp F2     &kp F3      &kp F4   &kp F5                                    &trans &trans &trans &trans &trans &trans
    &trans &kp C_FF &kp C_NEXT &kp C_PLAY  &kp VOLU &kp C_MUTE                                &trans &trans &trans &trans &trans &trans
    &trans &kp C_RW &kp C_PREV &kp C_PAUSE &kp VOLD &trans     &trans &trans    &trans &trans &trans &trans &trans &trans &trans &trans 
                               &trans      &trans   &trans     &trans &trans    &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(LS(TAB)) LC(TAB) &inc_dec_kp PG_UP PG_DN>;
        };

        layer_5 {
// ---------------------------------------------------------------------------------------------------------------------------------
// |     |     |     |     |     |     |                          |     |     |     |     |     |     |
// |     |     |     |     |     |     |                          |     |     |     |     |     |     |
// |     |     |     |     |     |     |     |     |~~|     |     |     |     |     |     |     |     |
//                   |     |     |     |     |     |~~|     |     |     |     |     |
            bindings = <
    &trans &trans &trans &trans &trans &trans                                &trans &trans &trans &trans  &trans  &none
    &trans &trans &trans &trans &trans &trans                                &trans &trans &trans &trans  &trans  &none
    &trans &trans &trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans  &trans  &none
                                &trans &trans &trans &trans    &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(LS(TAB)) LC(TAB) &inc_dec_kp PG_UP PG_DN>;
        };

    };
};

&left_encoder {
    resolution = <2>;
};